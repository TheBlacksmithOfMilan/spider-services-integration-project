let express = require('express');let router = express.Router();let UserService = require('../../services/user_service.js')let HTTPReqParamError = require('../../errors/http_request_param_error')const auth = require('../../middlewares/auth')const apiRes = require('../../utils/api_response')//! routers in this module is under '/api/user' path//  提交用户注册数据router.post('/', async (req, res, next) => {  try {    const {name, username, password} = req.body;    const {newUser, token} = await UserService.addNewUsers({name, username, password})    req.data = {userFound: newUser, token}    apiRes(req, res)  }  catch (e) {    next(e)  }})// 用户登陆页面router.get('/login', (req, res) => {  res.render('login')})router.get('/:userId', async (req, res, next) => {  (async () => {    let userId = req.params.userId    if (userId.length < 5) {      throw new HTTPReqParamError('userId', '用户id不能为空')    }    else {      console.log('userId.length > 5')      let user = await UserService.getUserById(userId)      req.data = {userFound: user}      apiRes(req, res)    }  })()    .then()    .catch((e) => {      console.log('error is catched')      next(e)    })})router.get('/:userId/subscription', auth, async (req, res, next) => {  try {    let subscriptions = await UserService.getSubscription(req.params.userId)    console.log(req.params.userId)    req.data = {sub: subscriptions}    apiRes(req, res)  } catch (err) {    next(err)  }})router.post('/:userId/subscription', auth, async (req, res) => {  // module.exports.createSubscription = async function (userId, url)  console.log(req.params)  console.log(req.body)  let newSub = await UserService.createSubscription(req.params.userId, req.body.url)  console.log('newSub :', newSub)  // subscription is supposed to be an Array  res.render('Sub', {subscription: [newSub]})})module.exports = router;